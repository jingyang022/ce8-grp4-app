name: Application Repo CICD workflow
on:
  push:
    branches:
    - main
    - dev

jobs:
   security:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check AWS CI/CD files for issues
        uses: snyk/actions/code@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
 #       with:
 #         args: --scan=resource-changes
 #         args: --severity-threshold=high
 #         args: --report

   build:
     runs-on: ubuntu-latest

     steps:
         - name: Checkout
           uses: actions/checkout@v4

         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-region: ap-southeast-1

         - name: Login to Amazon ECR
           id: login-ecr
           uses: aws-actions/amazon-ecr-login@v1

         - name: Build and push Docker image to Amazon ECR
           id: build-image
           uses: docker/build-push-action@v6
           with:
            context: .
            push: true
            tags: |
             ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_S3 }}:${{ github.sha }}
             ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_S3 }}:latest
            #platforms: linux/amd64
            #provenance: false
          
         - name: Download task definition
           run: |
              aws ecs describe-task-definition --task-definition ${{ vars.TASK_DEF }} --query taskDefinition > task-definition.json

         - name: Fill in the new image ID in the Amazon ECS task definition
           id: task-def
           uses: aws-actions/amazon-ecs-render-task-definition@v1
           with:
              task-definition: task-definition.json
              container-name: ${{ vars.CONTAINER_NAME }}
              image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_S3 }}:${{ github.sha }}

         - name: Deploy Amazon ECS task definition
           uses: aws-actions/amazon-ecs-deploy-task-definition@v1
           with:
              task-definition: ${{ steps.task-def.outputs.task-definition }}
              service: ${{ vars.ECS_SERVICE }}
              cluster: ${{ vars.ECS_CLUSTER }}
              wait-for-service-stability: true